Development Structure
---------------------

The source folder structure is required by the solution & projects to be like
this:-

+-DDECOMClient
| +-Test
+-Lib
| +-COM
| +-Core
| +-NCL
| +-WCL
+-Scripts

The following commands will create that structure by cloning the various
application and library repositories:-

C:\> mkdir Win32
C:\> git clone https://github.com/chrisoldwood/DDECOMClient.git Win32\DDECOMClient
C:\> mkdir Win32\Lib
C:\> git clone https://github.com/chrisoldwood/COM.git Win32\Lib\COM
C:\> git clone https://github.com/chrisoldwood/Core.git Win32\Lib\Core
C:\> git clone https://github.com/chrisoldwood/NCL.git Win32\Lib\NCL
C:\> git clone https://github.com/chrisoldwood/WCL.git Win32\Lib\WCL
<optional>
C:\> git clone https://github.com/chrisoldwood/Scripts.git Win32\Scripts

Command Line Builds
-------------------

Included in the scripts folder is one for building via the command line:-

C:\> Win32\Scripts\SetVars vc90
C:\> Win32\Scripts\Build debug Win32\DDECOMClient\DDECOMClient.sln

There is also one for upgrading to a later version of Visual C++:-

C:\> Win32\Scripts\SetVars vc140
C:\> Win32\Scripts\Upgrade Win32\DDECOMClient\DDECOMClient.sln

Tests
-----

A separate project exists in the solution with unit tests:-

> Test\Debug\%VC_PLATFORM%\Test.exe

There is a VBScript file which some standalone tests:-

> cscript //nologo TestScript.vbs

(For 32-bit on 64-bit Windows)

> %SystemRoot%\SysWOW64\cscript.exe //nologo TestScript.vbs

There is also a VBScript file which some tests that drive Excel:-

> cscript //nologo TestScriptExcel.vbs

(For 32-bit on 64-bit Windows)

> %SystemRoot%\SysWOW64\cscript.exe //nologo TestScriptExcel.vbs

Registry Settings
-----------------

You can view the Registry configuration with these PowerShell one-liners:

PS> gci -r HKCU:\Software\Classes\DDE* |
      foreach { Get-ItemProperty $_.PSPath } |
      select PSPath,'(Default)'

PS> gci -r HKCU:\Software\Classes\DDE* |
      foreach { Get-ItemProperty $_.PSPath } |
      select -Expand '(Default)' |
      where { $_ -like '{*}' } |
      foreach { gci -r HKCU:\Software\Classes\CLSID\$_ } |
      select -Expand PSPath |
      foreach { Get-ItemProperty $_ | select PSPath,'(Default)' }

Note: For the 32-bit settings on 64-bit Windows you need to adjust
'Classes\CLSID' to 'Classes\WOW6432Node\CLSID' in the second query.

Release Checklist
-----------------

- Update version number (Dll.rcv).
- Update documentation (ReadMe.txt, RelNotes.txt, and manual).
- Build and run tests.
- Build packages (zip).
- Tag repository.
- Upload packages.

Chris Oldwood 
24th November 2022
